!function n(t,e,i){function o(u,c){if(!e[u]){if(!t[u]){var f="function"==typeof require&&require;if(!c&&f)return f(u,!0);if(r)return r(u,!0);var a=new Error("Cannot find module '"+u+"'");throw a.code="MODULE_NOT_FOUND",a}var s=e[u]={exports:{}};t[u][0].call(s.exports,function(n){var e=t[u][1][n];return o(e?e:n)},s,s.exports,n,t,e,i)}return e[u].exports}for(var r="function"==typeof require&&require,u=0;u<i.length;u++)o(i[u]);o}({1:[function(n,t,e){funArray=n("../src")},{"../src":7}],2:[function(n,t,e){(()=>{"use strict";const n=n=>null===n||"boolean"==typeof n||"number"==typeof n||"string"==typeof n,e=t=>n(t)?JSON.stringify(t):void 0===t?"undefined":t instanceof Function?t.name||"=>":t instanceof RegExp||t instanceof Error?t.toString():t instanceof Array?`[${t.map(e).join(",")}]`:`{${Object.keys(t).join(",")}}`;t.exports=e})()},{}],3:[function(n,t,e){(()=>{"use strict";const e=n("stringify-anything"),i=(n,t,e)=>Object.defineProperty(e,n,{value:t}),o=(n,t)=>i("name",n,t),r=(n,t)=>i("length",n,t),u=n=>{throw Error(n)},c=(n,t,i)=>{"function"!=typeof n&&u(`${e(n)} should be a function`),"number"!=typeof t&&u(`${e(t)} should be a number`),i instanceof Array||u(`${e(i)} should be an Array`)},f=(n,t)=>e(n)+(t.length?`(${t.map(e).join(",")})`:""),a=(n,t=n.length,e=[])=>{return c(n,t,e),o(f(n,e),r(t,(...i)=>{const o=e.concat(i.length?i:[void 0]);return o.length>=t?n.apply(null,o):r(t-o.length,a(n,t,o))}))};t.exports=a})()},{"stringify-anything":2}],4:[function(n,t,e){(()=>{"use strict";const e=n("fun-curry"),{inputs:inputs,output:output}=n("guarded"),i=n=>n,o=Object.keys,r=n=>o(n).map(t=>n[t]),u=(n,t)=>o(t).reduce((e,i)=>{return e[i]=n(t[i]),e},{}),c=(n,t)=>o(t).reduce((e,o)=>{return e[o]=(n[o]||i)(t[o]),e},{}),f=n=>n.reduce((n,t)=>n&&t,!0),a=n=>t=>e=>n(t(e)),s=n=>t=>typeof t===n,l=()=>!0,p=s("boolean"),h=n=>g(n)&&Math.floor(n)===n&&Math.abs(n)!==1/0,g=s("number"),d=s("string"),y=s("function"),m=(n,t)=>t instanceof n,b=e(m)(Array),O=(n,t)=>b(t)&&f(t.map(t=>n(t))),x=(n,t)=>b(t)&&t.length===n,E=(n,t,e)=>x(n,e)&&O(t,e),v=(n,t)=>x(n.length,t)&&f(n.map((n,e)=>n(t[e]))),j=n=>b(n)&&n.length>0&&O(e(x)(n[0].length),n),P=(n,t)=>j(t)&&O(e(E)(t[0].length,n),t),k=n=>s("object")(n)&&null!==n,q=(n,t)=>k(t)&&f(r(t).map(t=>n(t))),A=(n,t)=>k(t)&&o(n).reduce((e,i)=>e&&n[i](t[i]),!0),N=(n,t)=>A(n,t)&&x(o(n).length,o(t)),W=n=>k(n)&&Object.getPrototypeOf(n)===Object.prototype,w=e(m)(RegExp),I=(n,t,e)=>t.reduce((t,i)=>t||n(i,e),!1),F=(n,t)=>t.length<2||!I(n,t.slice(1),t[0])&&F(n,t.slice(1)),R=(n,t,e)=>!e.length||e.length<=t.length&&!I(n,e.slice(1),e[0])&&I(n,t,e[0])&&R(n,t,e.slice(1)),U=(n,t,e)=>e.reduce((n,t)=>n.concat(t),[]).length===t.length&&R(n,t,e.reduce((n,t)=>n.concat(t),[])),D=(n,t,e,i)=>i.length===t&&U(n,e,i),M={bool:p,num:g,string:d,object:k,pojo:W,array:b,vector:x,matrix:j,fun:y,record:N,hasFields:A,tuple:v,objectOf:q,arrayOf:O,vectorOf:E,matrixOf:P,regExp:w,instanceOf:m,any:l,member:I,integer:h,distinct:F,subset:R,partition:U,nPartition:D},S=e(x),z=e(v),_=e(O),C=e(q),J=u(a(output(p)),u(inputs,{bool:S(1),num:S(1),integer:S(1),string:S(1),object:S(1),pojo:S(1),array:S(1),vector:z([g,l]),fun:S(1),record:z([C(y),l]),hasFields:z([C(y),l]),tuple:z([_(y),l]),objectOf:z([y,l]),arrayOf:z([y,l]),vectorOf:z([g,y,l]),matrixOf:z([y,l]),regExp:S(1),instanceOf:z([y,l]),any:S(1),member:z([y,b,l]),distinct:z([y,b]),subset:z([y,b,b]),partition:z([y,b,_(b)]),nPartition:z([y,g,b,_(b)])}));t.exports=u(e,c(J,M))})()},{"fun-curry":3,guarded:6}],5:[function(n,t,e){arguments[4][2][0].apply(e,arguments)},{dup:2}],6:[function(n,t,e){(()=>{"use strict";const e=n("stringify-anything"),i=n("fun-curry"),o=n=>0===n.length,r=n=>"number"==typeof n,u=n=>"function"==typeof n,c=(n,t)=>Object.keys(t).reduce((e,i)=>{return e[i]=n(t[i]),e},{}),f=n=>`\`${e(n)}\``,a=n=>{throw n},s="A contract with a guarded function has been broken!\n",l=(n,t,e)=>n(t)?t:a(e),p=(n,t,e)=>Object.defineProperty(e,n,Object.defineProperty(Object.getOwnPropertyDescriptor(e,n),"value",{value:t})),h=(n,t)=>p("length",n.length,p("name",n.name,t)),g=(n,t,...e)=>{return l(u,n,Error(s+`${f(n)} should be a function`)),l(u,t,Error(s+`${f(t)} should be a function`)),l(o,e,Error(s+`Extra arguments passed to io: ${f(e)}`)),h(t,(...e)=>{const o=t(...e);return l(i(n)(e),o,Error(s+`(inputs -> output) pair (${f(e)} ->`+` ${f(o)}) from function ${f(t)}`+` failed predicate ${f(n)}`)),o})},d=(n,t,...e)=>{return l(u,n,Error(s+`${f(n)} should be a function`)),l(u,t,Error(s+`${f(t)} should be a function`)),l(o,e,Error(s+`Extra arguments passed to inputs: ${f(e)}`)),h(t,(...e)=>{return l(n,e,Error(s+`inputs ${f(e)} to function ${f(t)}`+` failed predicate ${f(n)}`)),t(...e)})},y=(n,t,e,...i)=>{return l(r,n,Error(s+`${f(n)} should be a number`)),l(u,t,Error(s+`${f(t)} should be a function`)),l(u,e,Error(s+`${f(e)} should be a function`)),l(o,i,Error(s+`Extra arguments passed to inputN: ${f(i)}`)),h(e,(...i)=>{return l(t,i[n],Error(s+`input ${n} ${f(i[n])} to function`+` ${f(e)} failed predicate ${f(t)}`)),e(...i)})},m=(n,t,...e)=>y(0,n,t,...e),b=(n,t,...e)=>{return l(u,n,Error(s+`${f(n)} should be a function`)),l(u,t,Error(s+`${f(t)} should be a function`)),l(o,e,Error(s+`Extra arguments passed to output: ${f(e)}`)),h(t,(...e)=>{const i=t(...e);return l(n,i,Error(s+`output ${f(i)} of function ${f(t)}`+` with arguments ${f(e)} failed predicate ${f(n)}`)),i})},O={io:g,inputs:d,inputN:y,input:m,output:b};t.exports=c(i,O)})()},{"fun-curry":3,"stringify-anything":5}],7:[function(n,t,e){(()=>{"use strict";const e=n("fun-curry"),{inputs:inputs}=n("guarded"),{any:anything,vector:vector,vectorOf:vectorOf,tuple:tuple,array:array,arrayOf:arrayOf,fun:fun,num:num}=n("fun-type"),i=n=>n,o=(n,t)=>Object.keys(t).reduce((e,o)=>{return e[o]=(n[o]||i)(t[o]),e},{}),r=(n,t)=>Object.keys(t).reduce((e,i)=>{return e[i]=n(t[i]),e},{}),u=e((n,t)=>!n(t)),c=(n,t,e)=>e.reduce(n,t),f=(n,t,e)=>t.length===e.length&&c((n,t)=>n&&t,!0,X(n,t,e)),a=(n,t)=>V(B(n,t).length,t),s=(n,t)=>[H(n,t),S(n,t)],l=(n,t,e)=>e.length>=t?e:e.concat(j(t-e.length,n)),p=(n,t,e)=>e.length>=t?e:j(t-e.length,n).concat(e),h=n=>n.length?1===n.length?[n]:b(n.map((t,e)=>tn(n=>W(t,n),h(I(e,n))))):n,g=(n,t)=>b(tn(n=>tn(t=>[n,t],t),n)),d=n=>c((n,t)=>tn(([n,t])=>w(t,n),g(n,t)),[[]],n),y=n=>O(b,n=>A(u(m),n),n),m=n=>n instanceof Array,b=n=>c(fn,[],n),O=(n,t,e)=>{for(;!t(e);)e=n(e);return e},x=(n,t,e)=>O(t=>w(n(rn(t)),t),n=>n.length>=t,[e]),E=(n,t,e)=>O(t=>w(n(rn(t)),t),n=>t(rn(n)),[e]),v=(n,t)=>Array.apply(null,{length:t}).map((t,e)=>n(e)),j=(n,t)=>v(()=>t,n),P=(n,t)=>v(t=>n+t,t-n+1),k=n=>v(i,n),q=(n,t)=>c((t,e)=>t||n(e),!1,t),A=(n,t)=>c((t,e)=>t&&n(e),!0,t),N=(n,t,e)=>[...G(n,e),t,...K(n,e)],W=(n,t)=>[n,...t],w=(n,t)=>[...t,n],I=(n,t)=>t.filter((t,e)=>n!==e),F=(n,t)=>t.indexOf(n)!==-1,R=(n,t)=>D(n).filter(n=>F(n,t)),U=(n,t)=>D(n.concat(t)),D=n=>n.filter((t,e)=>n.indexOf(t)===e),M=(n,t)=>[$(n,t),$(u(n),t)],S=(n,t)=>t.findIndex(u(n))===-1?[]:K(t.findIndex(u(n)),t),z=w,_=n=>G(n.length-1,n),C=n=>K(1,n),J=W,L=n=>n[0].length?V(n[0].length-1,fn(n[0],n[1])):n,T=n=>n[1].length?V(n[0].length+1,fn(n[0],n[1])):n,B=(n,t)=>{for(var e=[],i=0;i<t.length;i++){if(!n(w(t[i],e)))return e;e.push(t[i])}return e},G=(n,t)=>t.slice(0,n),H=(n,t)=>t.findIndex(u(n))===-1?t:G(t.findIndex(u(n)),t),K=(n,t)=>t.slice(n),Q=(n,t,e)=>e.slice(n,t),V=(n,t)=>[G(n,t),K(n,t)],X=(n,t,e)=>t.map((t,i)=>n(t,e[i])),Y=n=>n.length,Z=(n,t)=>tn(n=>en(n,t),n),$=(n,t)=>t.filter(t=>n(t)),nn=(n,t)=>t.map((t,e)=>(n[e]||i)(t)),tn=(n,t)=>t.map(t=>n(t)),en=(n,t)=>t[n],on=n=>en(0,n),rn=n=>en(n.length-1,n),un=(n,t,e)=>e.map((e,i)=>i===n?t:e),cn=(n,t,e)=>un(n,t(en(n,e)),e),fn=(n,t)=>n.concat(t),an=()=>[],sn=n=>[n],ln=n=>Array.prototype.slice.call(n),pn=n=>tn(i,n).reverse(),hn=(n,t)=>tn(i,t).sort(n),gn={permute:h,length:Y,reIndex:Z,of:sn,from:ln,empty:an,concat:fn,map:tn,ap:nn,get:en,set:un,update:cn,filter:$,reverse:pn,sort:hn,zipWith:X,fold:c,take:G,takeWhile:H,drop:K,dropWhile:S,slice:Q,split:V,partition:M,unique:D,union:U,intersect:R,contains:F,insert:N,remove:I,append:w,prepend:W,all:A,any:q,index:k,range:P,repeat:j,sequence:v,last:rn,first:on,unfold:O,iterate:E,iterateN:x,cartesian:g,cartesianN:d,flatten:b,flattenR:y,isArray:m,leftPad:p,rightPad:l,span:s,spanPrefix:a,push:z,pop:_,shift:C,unshift:J,pushShift:T,popUnshift:L,takeWhilePrefix:B,equal:f},dn=r(inputs,{permute:tuple([array]),length:tuple([array]),reIndex:tuple([array,array]),of:vector(1),from:vector(1),concat:tuple([array,array]),map:tuple([fun,array]),ap:tuple([arrayOf(fun),array]),get:tuple([num,array]),set:tuple([num,anything,array]),update:tuple([num,fun,array]),filter:tuple([fun,array]),reverse:tuple([array]),sort:tuple([fun,array]),zipWith:tuple([fun,array,array]),fold:tuple([fun,anything,array]),take:tuple([num,array]),takeWhile:tuple([fun,array]),drop:tuple([num,array]),dropWhile:tuple([fun,array]),slice:tuple([num,num,array]),split:tuple([num,array]),partition:tuple([fun,array]),unique:tuple([array]),union:tuple([array,array]),intersect:tuple([array,array]),contains:tuple([anything,array]),insert:tuple([num,anything,array]),remove:tuple([num,array]),append:tuple([anything,array]),prepend:tuple([anything,array]),all:tuple([fun,array]),any:tuple([fun,array]),index:tuple([num]),range:tuple([num,num]),repeat:tuple([num,anything]),sequence:tuple([fun,num]),last:tuple([array]),first:tuple([array]),unfold:tuple([fun,fun,anything]),iterate:tuple([fun,fun,anything]),iterateN:tuple([fun,num,anything]),cartesian:tuple([array,array]),cartesianN:tuple([arrayOf(array)]),flatten:tuple([arrayOf(array)]),flattenR:tuple([array]),isArray:vector(1),leftPad:tuple([anything,num,array]),rightPad:tuple([anything,num,array]),span:tuple([fun,array]),spanPrefix:tuple([fun,array]),push:tuple([anything,array]),pop:tuple([array]),shift:tuple([array]),unshift:tuple([anything,array]),popUnshift:tuple([vectorOf(2,array)]),takeWhilePrefix:tuple([fun,array]),equal:tuple([fun,array,anything])});t.exports=r(e,o(dn,gn))})()},{"fun-curry":3,"fun-type":4,guarded:6}]},{},[1]);
